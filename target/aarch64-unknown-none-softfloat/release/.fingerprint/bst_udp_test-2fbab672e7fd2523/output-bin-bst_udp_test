{"message":"unused import: `libax::io::prelude::*`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"apps/net/bst_udp_test/src/main.rs","byte_start":70,"byte_end":91,"line_start":7,"line_end":7,"column_start":5,"column_end":26,"is_primary":true,"text":[{"text":"use libax::io::prelude::*;","highlight_start":5,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"apps/net/bst_udp_test/src/main.rs","byte_start":66,"byte_end":92,"line_start":7,"line_end":7,"column_start":1,"column_end":27,"is_primary":true,"text":[{"text":"use libax::io::prelude::*;","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `libax::io::prelude::*`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mapps/net/bst_udp_test/src/main.rs:7:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m7\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse libax::io::prelude::*;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}
{"message":"unused import: `prelude::*`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"apps/net/bst_udp_test/src/main.rs","byte_start":195,"byte_end":205,"line_start":15,"line_end":15,"column_start":23,"column_end":33,"is_primary":true,"text":[{"text":"use libax::io::{self, prelude::*};","highlight_start":23,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"apps/net/bst_udp_test/src/main.rs","byte_start":193,"byte_end":205,"line_start":15,"line_end":15,"column_start":21,"column_end":33,"is_primary":true,"text":[{"text":"use libax::io::{self, prelude::*};","highlight_start":21,"highlight_end":33}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `prelude::*`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mapps/net/bst_udp_test/src/main.rs:15:23\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse libax::io::{self, prelude::*};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused imports: `TcpListener`, `TcpStream`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"apps/net/bst_udp_test/src/main.rs","byte_start":245,"byte_end":256,"line_start":16,"line_end":16,"column_start":38,"column_end":49,"is_primary":true,"text":[{"text":"use libax::net::{IpAddr, SocketAddr, TcpListener, TcpStream, UdpSocket};","highlight_start":38,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"apps/net/bst_udp_test/src/main.rs","byte_start":258,"byte_end":267,"line_start":16,"line_end":16,"column_start":51,"column_end":60,"is_primary":true,"text":[{"text":"use libax::net::{IpAddr, SocketAddr, TcpListener, TcpStream, UdpSocket};","highlight_start":51,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"apps/net/bst_udp_test/src/main.rs","byte_start":243,"byte_end":267,"line_start":16,"line_end":16,"column_start":36,"column_end":60,"is_primary":true,"text":[{"text":"use libax::net::{IpAddr, SocketAddr, TcpListener, TcpStream, UdpSocket};","highlight_start":36,"highlight_end":60}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `TcpListener`, `TcpStream`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mapps/net/bst_udp_test/src/main.rs:16:38\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse libax::net::{IpAddr, SocketAddr, TcpListener, TcpStream, UdpSocket};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused variable: `socket65004`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"apps/net/bst_udp_test/src/main.rs","byte_start":80936,"byte_end":80947,"line_start":1188,"line_end":1188,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"    let socket65004 = UdpSocket::bind((addr, port).into()).unwrap();","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_variables)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"apps/net/bst_udp_test/src/main.rs","byte_start":80936,"byte_end":80947,"line_start":1188,"line_end":1188,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"    let socket65004 = UdpSocket::bind((addr, port).into()).unwrap();","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":"_socket65004","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `socket65004`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mapps/net/bst_udp_test/src/main.rs:1188:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1188\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let socket65004 = UdpSocket::bind((addr, port).into()).unwrap();\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_socket65004`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_variables)]` on by default\u001b[0m\n\n"}
{"message":"unused variable: `socket65003`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"apps/net/bst_udp_test/src/main.rs","byte_start":81075,"byte_end":81086,"line_start":1191,"line_end":1191,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"    let socket65003 = UdpSocket::bind((addr, port).into()).unwrap();","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"apps/net/bst_udp_test/src/main.rs","byte_start":81075,"byte_end":81086,"line_start":1191,"line_end":1191,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"    let socket65003 = UdpSocket::bind((addr, port).into()).unwrap();","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":"_socket65003","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `socket65003`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mapps/net/bst_udp_test/src/main.rs:1191:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1191\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let socket65003 = UdpSocket::bind((addr, port).into()).unwrap();\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_socket65003`\u001b[0m\n\n"}
{"message":"unused variable: `socket65007`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"apps/net/bst_udp_test/src/main.rs","byte_start":81353,"byte_end":81364,"line_start":1197,"line_end":1197,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"    let socket65007 = UdpSocket::bind((addr, port).into()).unwrap();","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"apps/net/bst_udp_test/src/main.rs","byte_start":81353,"byte_end":81364,"line_start":1197,"line_end":1197,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"    let socket65007 = UdpSocket::bind((addr, port).into()).unwrap();","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":"_socket65007","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `socket65007`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mapps/net/bst_udp_test/src/main.rs:1197:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1197\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let socket65007 = UdpSocket::bind((addr, port).into()).unwrap();\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_socket65007`\u001b[0m\n\n"}
{"message":"unused variable: `socket65005`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"apps/net/bst_udp_test/src/main.rs","byte_start":81492,"byte_end":81503,"line_start":1200,"line_end":1200,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"    let socket65005 = UdpSocket::bind((addr, port).into()).unwrap();","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"apps/net/bst_udp_test/src/main.rs","byte_start":81492,"byte_end":81503,"line_start":1200,"line_end":1200,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"    let socket65005 = UdpSocket::bind((addr, port).into()).unwrap();","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":"_socket65005","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `socket65005`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mapps/net/bst_udp_test/src/main.rs:1200:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1200\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let socket65005 = UdpSocket::bind((addr, port).into()).unwrap();\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_socket65005`\u001b[0m\n\n"}
{"message":"unused variable: `socket60000`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"apps/net/bst_udp_test/src/main.rs","byte_start":81713,"byte_end":81724,"line_start":1208,"line_end":1208,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"    let socket60000 = UdpSocket::bind((addr, 60000).into()).unwrap();","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"apps/net/bst_udp_test/src/main.rs","byte_start":81713,"byte_end":81724,"line_start":1208,"line_end":1208,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"    let socket60000 = UdpSocket::bind((addr, 60000).into()).unwrap();","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":"_socket60000","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `socket60000`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mapps/net/bst_udp_test/src/main.rs:1208:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1208\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let socket60000 = UdpSocket::bind((addr, 60000).into()).unwrap();\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_socket60000`\u001b[0m\n\n"}
{"message":"unused variable: `socket60001`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"apps/net/bst_udp_test/src/main.rs","byte_start":81783,"byte_end":81794,"line_start":1209,"line_end":1209,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"    let socket60001 = UdpSocket::bind((addr, 60001).into()).unwrap();","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"apps/net/bst_udp_test/src/main.rs","byte_start":81783,"byte_end":81794,"line_start":1209,"line_end":1209,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"    let socket60001 = UdpSocket::bind((addr, 60001).into()).unwrap();","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":"_socket60001","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `socket60001`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mapps/net/bst_udp_test/src/main.rs:1209:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1209\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let socket60001 = UdpSocket::bind((addr, 60001).into()).unwrap();\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_socket60001`\u001b[0m\n\n"}
{"message":"unused variable: `socket60002`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"apps/net/bst_udp_test/src/main.rs","byte_start":81853,"byte_end":81864,"line_start":1210,"line_end":1210,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"    let socket60002 = UdpSocket::bind((addr, 60002).into()).unwrap();","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"apps/net/bst_udp_test/src/main.rs","byte_start":81853,"byte_end":81864,"line_start":1210,"line_end":1210,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"    let socket60002 = UdpSocket::bind((addr, 60002).into()).unwrap();","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":"_socket60002","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `socket60002`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mapps/net/bst_udp_test/src/main.rs:1210:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1210\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let socket60002 = UdpSocket::bind((addr, 60002).into()).unwrap();\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_socket60002`\u001b[0m\n\n"}
{"message":"unused variable: `socket60003`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"apps/net/bst_udp_test/src/main.rs","byte_start":81923,"byte_end":81934,"line_start":1211,"line_end":1211,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"    let socket60003 = UdpSocket::bind((addr, 60003).into()).unwrap();","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"apps/net/bst_udp_test/src/main.rs","byte_start":81923,"byte_end":81934,"line_start":1211,"line_end":1211,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"    let socket60003 = UdpSocket::bind((addr, 60003).into()).unwrap();","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":"_socket60003","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `socket60003`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mapps/net/bst_udp_test/src/main.rs:1211:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1211\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let socket60003 = UdpSocket::bind((addr, 60003).into()).unwrap();\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_socket60003`\u001b[0m\n\n"}
{"message":"unused variable: `socket60004`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"apps/net/bst_udp_test/src/main.rs","byte_start":81993,"byte_end":82004,"line_start":1212,"line_end":1212,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"    let socket60004 = UdpSocket::bind((addr, 60004).into()).unwrap();","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"apps/net/bst_udp_test/src/main.rs","byte_start":81993,"byte_end":82004,"line_start":1212,"line_end":1212,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"    let socket60004 = UdpSocket::bind((addr, 60004).into()).unwrap();","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":"_socket60004","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `socket60004`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mapps/net/bst_udp_test/src/main.rs:1212:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1212\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let socket60004 = UdpSocket::bind((addr, 60004).into()).unwrap();\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_socket60004`\u001b[0m\n\n"}
{"message":"unused variable: `socket60005`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"apps/net/bst_udp_test/src/main.rs","byte_start":82063,"byte_end":82074,"line_start":1213,"line_end":1213,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"    let socket60005 = UdpSocket::bind((addr, 60005).into()).unwrap();","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"apps/net/bst_udp_test/src/main.rs","byte_start":82063,"byte_end":82074,"line_start":1213,"line_end":1213,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"    let socket60005 = UdpSocket::bind((addr, 60005).into()).unwrap();","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":"_socket60005","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `socket60005`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mapps/net/bst_udp_test/src/main.rs:1213:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1213\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let socket60005 = UdpSocket::bind((addr, 60005).into()).unwrap();\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_socket60005`\u001b[0m\n\n"}
{"message":"unused variable: `socket60006`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"apps/net/bst_udp_test/src/main.rs","byte_start":82133,"byte_end":82144,"line_start":1214,"line_end":1214,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"    let socket60006 = UdpSocket::bind((addr, 60006).into()).unwrap();","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"apps/net/bst_udp_test/src/main.rs","byte_start":82133,"byte_end":82144,"line_start":1214,"line_end":1214,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"    let socket60006 = UdpSocket::bind((addr, 60006).into()).unwrap();","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":"_socket60006","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `socket60006`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mapps/net/bst_udp_test/src/main.rs:1214:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1214\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let socket60006 = UdpSocket::bind((addr, 60006).into()).unwrap();\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_socket60006`\u001b[0m\n\n"}
{"message":"unused variable: `socket60007`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"apps/net/bst_udp_test/src/main.rs","byte_start":82203,"byte_end":82214,"line_start":1215,"line_end":1215,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"    let socket60007 = UdpSocket::bind((addr, 60007).into()).unwrap();","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"apps/net/bst_udp_test/src/main.rs","byte_start":82203,"byte_end":82214,"line_start":1215,"line_end":1215,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"    let socket60007 = UdpSocket::bind((addr, 60007).into()).unwrap();","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":"_socket60007","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `socket60007`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mapps/net/bst_udp_test/src/main.rs:1215:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1215\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let socket60007 = UdpSocket::bind((addr, 60007).into()).unwrap();\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_socket60007`\u001b[0m\n\n"}
{"message":"unused variable: `socket60008`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"apps/net/bst_udp_test/src/main.rs","byte_start":82273,"byte_end":82284,"line_start":1216,"line_end":1216,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"    let socket60008 = UdpSocket::bind((addr, 60008).into()).unwrap();","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"apps/net/bst_udp_test/src/main.rs","byte_start":82273,"byte_end":82284,"line_start":1216,"line_end":1216,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"    let socket60008 = UdpSocket::bind((addr, 60008).into()).unwrap();","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":"_socket60008","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `socket60008`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mapps/net/bst_udp_test/src/main.rs:1216:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1216\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let socket60008 = UdpSocket::bind((addr, 60008).into()).unwrap();\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_socket60008`\u001b[0m\n\n"}
{"message":"unused variable: `socket60009`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"apps/net/bst_udp_test/src/main.rs","byte_start":82343,"byte_end":82354,"line_start":1217,"line_end":1217,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"    let socket60009 = UdpSocket::bind((addr, 60009).into()).unwrap();","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"apps/net/bst_udp_test/src/main.rs","byte_start":82343,"byte_end":82354,"line_start":1217,"line_end":1217,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"    let socket60009 = UdpSocket::bind((addr, 60009).into()).unwrap();","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":"_socket60009","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `socket60009`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mapps/net/bst_udp_test/src/main.rs:1217:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1217\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let socket60009 = UdpSocket::bind((addr, 60009).into()).unwrap();\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_socket60009`\u001b[0m\n\n"}
{"message":"unused variable: `socket60010`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"apps/net/bst_udp_test/src/main.rs","byte_start":82413,"byte_end":82424,"line_start":1218,"line_end":1218,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"    let socket60010 = UdpSocket::bind((addr, 60010).into()).unwrap();","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"apps/net/bst_udp_test/src/main.rs","byte_start":82413,"byte_end":82424,"line_start":1218,"line_end":1218,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"    let socket60010 = UdpSocket::bind((addr, 60010).into()).unwrap();","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":"_socket60010","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `socket60010`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mapps/net/bst_udp_test/src/main.rs:1218:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1218\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let socket60010 = UdpSocket::bind((addr, 60010).into()).unwrap();\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_socket60010`\u001b[0m\n\n"}
{"message":"unused variable: `socket60011`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"apps/net/bst_udp_test/src/main.rs","byte_start":82483,"byte_end":82494,"line_start":1219,"line_end":1219,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"    let socket60011 = UdpSocket::bind((addr, 60011).into()).unwrap();","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"apps/net/bst_udp_test/src/main.rs","byte_start":82483,"byte_end":82494,"line_start":1219,"line_end":1219,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"    let socket60011 = UdpSocket::bind((addr, 60011).into()).unwrap();","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":"_socket60011","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `socket60011`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mapps/net/bst_udp_test/src/main.rs:1219:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1219\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let socket60011 = UdpSocket::bind((addr, 60011).into()).unwrap();\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_socket60011`\u001b[0m\n\n"}
{"message":"unused variable: `socket60012`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"apps/net/bst_udp_test/src/main.rs","byte_start":82553,"byte_end":82564,"line_start":1220,"line_end":1220,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"    let socket60012 = UdpSocket::bind((addr, 60012).into()).unwrap();","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"apps/net/bst_udp_test/src/main.rs","byte_start":82553,"byte_end":82564,"line_start":1220,"line_end":1220,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"    let socket60012 = UdpSocket::bind((addr, 60012).into()).unwrap();","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":"_socket60012","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `socket60012`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mapps/net/bst_udp_test/src/main.rs:1220:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1220\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let socket60012 = UdpSocket::bind((addr, 60012).into()).unwrap();\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_socket60012`\u001b[0m\n\n"}
{"message":"unused variable: `socket61003`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"apps/net/bst_udp_test/src/main.rs","byte_start":82695,"byte_end":82706,"line_start":1225,"line_end":1225,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"    let socket61003 = UdpSocket::bind((addr, port).into()).unwrap();","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"apps/net/bst_udp_test/src/main.rs","byte_start":82695,"byte_end":82706,"line_start":1225,"line_end":1225,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"    let socket61003 = UdpSocket::bind((addr, port).into()).unwrap();","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":"_socket61003","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `socket61003`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mapps/net/bst_udp_test/src/main.rs:1225:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1225\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let socket61003 = UdpSocket::bind((addr, port).into()).unwrap();\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_socket61003`\u001b[0m\n\n"}
{"message":"unused variable: `socket61002`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"apps/net/bst_udp_test/src/main.rs","byte_start":82834,"byte_end":82845,"line_start":1228,"line_end":1228,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"    let socket61002 = UdpSocket::bind((addr, port).into()).unwrap();","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"apps/net/bst_udp_test/src/main.rs","byte_start":82834,"byte_end":82845,"line_start":1228,"line_end":1228,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"    let socket61002 = UdpSocket::bind((addr, port).into()).unwrap();","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":"_socket61002","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `socket61002`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mapps/net/bst_udp_test/src/main.rs:1228:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1228\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let socket61002 = UdpSocket::bind((addr, port).into()).unwrap();\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_socket61002`\u001b[0m\n\n"}
{"message":"unused variable: `socket61002`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"apps/net/bst_udp_test/src/main.rs","byte_start":82973,"byte_end":82984,"line_start":1231,"line_end":1231,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"    let socket61002 = UdpSocket::bind((addr, port).into()).unwrap();","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"apps/net/bst_udp_test/src/main.rs","byte_start":82973,"byte_end":82984,"line_start":1231,"line_end":1231,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"    let socket61002 = UdpSocket::bind((addr, port).into()).unwrap();","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":"_socket61002","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `socket61002`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mapps/net/bst_udp_test/src/main.rs:1231:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1231\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let socket61002 = UdpSocket::bind((addr, port).into()).unwrap();\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_socket61002`\u001b[0m\n\n"}
{"message":"unused variable: `socket61002`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"apps/net/bst_udp_test/src/main.rs","byte_start":83111,"byte_end":83122,"line_start":1233,"line_end":1233,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"    let socket61002 = UdpSocket::bind((addr, port).into()).unwrap();","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"apps/net/bst_udp_test/src/main.rs","byte_start":83111,"byte_end":83122,"line_start":1233,"line_end":1233,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"    let socket61002 = UdpSocket::bind((addr, port).into()).unwrap();","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":"_socket61002","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `socket61002`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mapps/net/bst_udp_test/src/main.rs:1233:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1233\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let socket61002 = UdpSocket::bind((addr, port).into()).unwrap();\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_socket61002`\u001b[0m\n\n"}
{"message":"unused variable: `socket61002`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"apps/net/bst_udp_test/src/main.rs","byte_start":83249,"byte_end":83260,"line_start":1235,"line_end":1235,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"    let socket61002 = UdpSocket::bind((addr, port).into()).unwrap();","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"apps/net/bst_udp_test/src/main.rs","byte_start":83249,"byte_end":83260,"line_start":1235,"line_end":1235,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"    let socket61002 = UdpSocket::bind((addr, port).into()).unwrap();","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":"_socket61002","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `socket61002`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mapps/net/bst_udp_test/src/main.rs:1235:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1235\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let socket61002 = UdpSocket::bind((addr, port).into()).unwrap();\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_socket61002`\u001b[0m\n\n"}
{"message":"unused variable: `sleep_time`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"apps/net/bst_udp_test/src/main.rs","byte_start":83319,"byte_end":83329,"line_start":1237,"line_end":1237,"column_start":9,"column_end":19,"is_primary":true,"text":[{"text":"    let sleep_time = core::time::Duration::from_secs(1);","highlight_start":9,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"apps/net/bst_udp_test/src/main.rs","byte_start":83319,"byte_end":83329,"line_start":1237,"line_end":1237,"column_start":9,"column_end":19,"is_primary":true,"text":[{"text":"    let sleep_time = core::time::Duration::from_secs(1);","highlight_start":9,"highlight_end":19}],"label":null,"suggested_replacement":"_sleep_time","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `sleep_time`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mapps/net/bst_udp_test/src/main.rs:1237:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1237\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let sleep_time = core::time::Duration::from_secs(1);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_sleep_time`\u001b[0m\n\n"}
{"message":"constant `LOCAL_PORT` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"apps/net/bst_udp_test/src/main.rs","byte_start":355,"byte_end":365,"line_start":21,"line_end":21,"column_start":7,"column_end":17,"is_primary":true,"text":[{"text":"const LOCAL_PORT: u16 = 61002;","highlight_start":7,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(dead_code)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `LOCAL_PORT` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mapps/net/bst_udp_test/src/main.rs:21:7\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m21\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mconst LOCAL_PORT: u16 = 61002;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(dead_code)]` on by default\u001b[0m\n\n"}
{"message":"27 warnings emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: 27 warnings emitted\u001b[0m\n\n"}
